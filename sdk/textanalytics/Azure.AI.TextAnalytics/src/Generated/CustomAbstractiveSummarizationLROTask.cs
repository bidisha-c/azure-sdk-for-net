// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Language.AnalyzeText
{
    /// <summary> An object representing the task definition for an Custom Abstractive Summarization task. </summary>
    public partial class CustomAbstractiveSummarizationLROTask : AnalyzeTextLROTask
    {
        /// <summary> Initializes a new instance of <see cref="CustomAbstractiveSummarizationLROTask"/>. </summary>
        /// <param name="parameters"> Parameters for the Custom Abstractive Summarization task. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="parameters"/> is null. </exception>
        public CustomAbstractiveSummarizationLROTask(CustomAbstractiveSummarizationTaskContent parameters)
        {
            Argument.AssertNotNull(parameters, nameof(parameters));

            Kind = AnalyzeTextLROTaskKind.CustomAbstractiveSummarization;
            Parameters = parameters;
        }

        /// <summary> Initializes a new instance of <see cref="CustomAbstractiveSummarizationLROTask"/>. </summary>
        /// <param name="taskName"> task name. </param>
        /// <param name="kind"> The kind of task to perform. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="parameters"> Parameters for the Custom Abstractive Summarization task. </param>
        internal CustomAbstractiveSummarizationLROTask(string taskName, AnalyzeTextLROTaskKind kind, IDictionary<string, BinaryData> serializedAdditionalRawData, CustomAbstractiveSummarizationTaskContent parameters) : base(taskName, kind, serializedAdditionalRawData)
        {
            Parameters = parameters;
        }

        /// <summary> Initializes a new instance of <see cref="CustomAbstractiveSummarizationLROTask"/> for deserialization. </summary>
        internal CustomAbstractiveSummarizationLROTask()
        {
        }

        /// <summary> Parameters for the Custom Abstractive Summarization task. </summary>
        public CustomAbstractiveSummarizationTaskContent Parameters { get; }
    }
}
