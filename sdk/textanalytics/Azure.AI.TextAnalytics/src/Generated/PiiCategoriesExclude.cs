// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.AI.Language.AnalyzeText
{
    /// <summary> (Optional) describes the PII categories to return. </summary>
    public readonly partial struct PiiCategoriesExclude : IEquatable<PiiCategoriesExclude>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="PiiCategoriesExclude"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public PiiCategoriesExclude(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string ABARoutingNumberValue = "ABARoutingNumber";
        private const string ARNationalIdentityNumberValue = "ARNationalIdentityNumber";
        private const string AUBankAccountNumberValue = "AUBankAccountNumber";
        private const string AUDriversLicenseNumberValue = "AUDriversLicenseNumber";
        private const string AUMedicalAccountNumberValue = "AUMedicalAccountNumber";
        private const string AUPassportNumberValue = "AUPassportNumber";
        private const string AUTaxFileNumberValue = "AUTaxFileNumber";
        private const string AUBusinessNumberValue = "AUBusinessNumber";
        private const string AUCompanyNumberValue = "AUCompanyNumber";
        private const string ATIdentityCardValue = "ATIdentityCard";
        private const string ATTaxIdentificationNumberValue = "ATTaxIdentificationNumber";
        private const string ATValueAddedTaxNumberValue = "ATValueAddedTaxNumber";
        private const string AzureDocumentDBAuthKeyValue = "AzureDocumentDBAuthKey";
        private const string AzureIAASDatabaseConnectionAndSQLStringValue = "AzureIAASDatabaseConnectionAndSQLString";
        private const string AzureIoTConnectionStringValue = "AzureIoTConnectionString";
        private const string AzurePublishSettingPasswordValue = "AzurePublishSettingPassword";
        private const string AzureRedisCacheStringValue = "AzureRedisCacheString";
        private const string AzureSASValue = "AzureSAS";
        private const string AzureServiceBusStringValue = "AzureServiceBusString";
        private const string AzureStorageAccountKeyValue = "AzureStorageAccountKey";
        private const string AzureStorageAccountGenericValue = "AzureStorageAccountGeneric";
        private const string BENationalNumberValue = "BENationalNumber";
        private const string BENationalNumberV2Value = "BENationalNumberV2";
        private const string BEValueAddedTaxNumberValue = "BEValueAddedTaxNumber";
        private const string BRCPFNumberValue = "BRCPFNumber";
        private const string BRLegalEntityNumberValue = "BRLegalEntityNumber";
        private const string BRNationalIDRGValue = "BRNationalIDRG";
        private const string BGUniformCivilNumberValue = "BGUniformCivilNumber";
        private const string CABankAccountNumberValue = "CABankAccountNumber";
        private const string CADriversLicenseNumberValue = "CADriversLicenseNumber";
        private const string CAHealthServiceNumberValue = "CAHealthServiceNumber";
        private const string CAPassportNumberValue = "CAPassportNumber";
        private const string CAPersonalHealthIdentificationValue = "CAPersonalHealthIdentification";
        private const string CASocialInsuranceNumberValue = "CASocialInsuranceNumber";
        private const string CLIdentityCardNumberValue = "CLIdentityCardNumber";
        private const string CNResidentIdentityCardNumberValue = "CNResidentIdentityCardNumber";
        private const string CreditCardNumberValue = "CreditCardNumber";
        private const string HRIdentityCardNumberValue = "HRIdentityCardNumber";
        private const string HRNationalIDNumberValue = "HRNationalIDNumber";
        private const string HRPersonalIdentificationNumberValue = "HRPersonalIdentificationNumber";
        private const string HRPersonalIdentificationOIBNumberV2Value = "HRPersonalIdentificationOIBNumberV2";
        private const string CYIdentityCardValue = "CYIdentityCard";
        private const string CYTaxIdentificationNumberValue = "CYTaxIdentificationNumber";
        private const string CZPersonalIdentityNumberValue = "CZPersonalIdentityNumber";
        private const string CZPersonalIdentityV2Value = "CZPersonalIdentityV2";
        private const string DKPersonalIdentificationNumberValue = "DKPersonalIdentificationNumber";
        private const string DKPersonalIdentificationV2Value = "DKPersonalIdentificationV2";
        private const string DrugEnforcementAgencyNumberValue = "DrugEnforcementAgencyNumber";
        private const string EEPersonalIdentificationCodeValue = "EEPersonalIdentificationCode";
        private const string EUDebitCardNumberValue = "EUDebitCardNumber";
        private const string EUDriversLicenseNumberValue = "EUDriversLicenseNumber";
        private const string EUGPSCoordinatesValue = "EUGPSCoordinates";
        private const string EUNationalIdentificationNumberValue = "EUNationalIdentificationNumber";
        private const string EUPassportNumberValue = "EUPassportNumber";
        private const string EUSocialSecurityNumberValue = "EUSocialSecurityNumber";
        private const string EUTaxIdentificationNumberValue = "EUTaxIdentificationNumber";
        private const string FIEuropeanHealthNumberValue = "FIEuropeanHealthNumber";
        private const string FINationalIDValue = "FINationalID";
        private const string FINationalIDV2Value = "FINationalIDV2";
        private const string FIPassportNumberValue = "FIPassportNumber";
        private const string FRDriversLicenseNumberValue = "FRDriversLicenseNumber";
        private const string FRHealthInsuranceNumberValue = "FRHealthInsuranceNumber";
        private const string FRNationalIDValue = "FRNationalID";
        private const string FRPassportNumberValue = "FRPassportNumber";
        private const string FRSocialSecurityNumberValue = "FRSocialSecurityNumber";
        private const string FRTaxIdentificationNumberValue = "FRTaxIdentificationNumber";
        private const string FRValueAddedTaxNumberValue = "FRValueAddedTaxNumber";
        private const string DEDriversLicenseNumberValue = "DEDriversLicenseNumber";
        private const string DEPassportNumberValue = "DEPassportNumber";
        private const string DEIdentityCardNumberValue = "DEIdentityCardNumber";
        private const string DETaxIdentificationNumberValue = "DETaxIdentificationNumber";
        private const string DEValueAddedNumberValue = "DEValueAddedNumber";
        private const string GRNationalIDCardValue = "GRNationalIDCard";
        private const string GRNationalIDV2Value = "GRNationalIDV2";
        private const string GRTaxIdentificationNumberValue = "GRTaxIdentificationNumber";
        private const string HKIdentityCardNumberValue = "HKIdentityCardNumber";
        private const string HUValueAddedNumberValue = "HUValueAddedNumber";
        private const string HUPersonalIdentificationNumberValue = "HUPersonalIdentificationNumber";
        private const string HUTaxIdentificationNumberValue = "HUTaxIdentificationNumber";
        private const string INPermanentAccountValue = "INPermanentAccount";
        private const string INUniqueIdentificationNumberValue = "INUniqueIdentificationNumber";
        private const string IDIdentityCardNumberValue = "IDIdentityCardNumber";
        private const string InternationalBankingAccountNumberValue = "InternationalBankingAccountNumber";
        private const string IEPersonalPublicServiceNumberValue = "IEPersonalPublicServiceNumber";
        private const string IEPersonalPublicServiceNumberV2Value = "IEPersonalPublicServiceNumberV2";
        private const string ILBankAccountNumberValue = "ILBankAccountNumber";
        private const string ILNationalIDValue = "ILNationalID";
        private const string ITDriversLicenseNumberValue = "ITDriversLicenseNumber";
        private const string ITFiscalCodeValue = "ITFiscalCode";
        private const string ITValueAddedTaxNumberValue = "ITValueAddedTaxNumber";
        private const string JPBankAccountNumberValue = "JPBankAccountNumber";
        private const string JPDriversLicenseNumberValue = "JPDriversLicenseNumber";
        private const string JPPassportNumberValue = "JPPassportNumber";
        private const string JPResidentRegistrationNumberValue = "JPResidentRegistrationNumber";
        private const string JPSocialInsuranceNumberValue = "JPSocialInsuranceNumber";
        private const string JPMyNumberCorporateValue = "JPMyNumberCorporate";
        private const string JPMyNumberPersonalValue = "JPMyNumberPersonal";
        private const string JPResidenceCardNumberValue = "JPResidenceCardNumber";
        private const string LVPersonalCodeValue = "LVPersonalCode";
        private const string LTPersonalCodeValue = "LTPersonalCode";
        private const string LUNationalIdentificationNumberNaturalValue = "LUNationalIdentificationNumberNatural";
        private const string LUNationalIdentificationNumberNonNaturalValue = "LUNationalIdentificationNumberNonNatural";
        private const string MYIdentityCardNumberValue = "MYIdentityCardNumber";
        private const string MTIdentityCardNumberValue = "MTIdentityCardNumber";
        private const string MTTaxIDNumberValue = "MTTaxIDNumber";
        private const string NLCitizensServiceNumberValue = "NLCitizensServiceNumber";
        private const string NLCitizensServiceNumberV2Value = "NLCitizensServiceNumberV2";
        private const string NLTaxIdentificationNumberValue = "NLTaxIdentificationNumber";
        private const string NLValueAddedTaxNumberValue = "NLValueAddedTaxNumber";
        private const string NZBankAccountNumberValue = "NZBankAccountNumber";
        private const string NZDriversLicenseNumberValue = "NZDriversLicenseNumber";
        private const string NZInlandRevenueNumberValue = "NZInlandRevenueNumber";
        private const string NZMinistryOfHealthNumberValue = "NZMinistryOfHealthNumber";
        private const string NZSocialWelfareNumberValue = "NZSocialWelfareNumber";
        private const string NOIdentityNumberValue = "NOIdentityNumber";
        private const string PHUnifiedMultiPurposeIDNumberValue = "PHUnifiedMultiPurposeIDNumber";
        private const string PLIdentityCardValue = "PLIdentityCard";
        private const string PLNationalIDValue = "PLNationalID";
        private const string PLNationalIDV2Value = "PLNationalIDV2";
        private const string PLPassportNumberValue = "PLPassportNumber";
        private const string PLTaxIdentificationNumberValue = "PLTaxIdentificationNumber";
        private const string PLREGONNumberValue = "PLREGONNumber";
        private const string PTCitizenCardNumberValue = "PTCitizenCardNumber";
        private const string PTCitizenCardNumberV2Value = "PTCitizenCardNumberV2";
        private const string PTTaxIdentificationNumberValue = "PTTaxIdentificationNumber";
        private const string ROPersonalNumericalCodeValue = "ROPersonalNumericalCode";
        private const string RUPassportNumberDomesticValue = "RUPassportNumberDomestic";
        private const string RUPassportNumberInternationalValue = "RUPassportNumberInternational";
        private const string SANationalIDValue = "SANationalID";
        private const string SGNationalRegistrationIdentityCardNumberValue = "SGNationalRegistrationIdentityCardNumber";
        private const string SKPersonalNumberValue = "SKPersonalNumber";
        private const string SITaxIdentificationNumberValue = "SITaxIdentificationNumber";
        private const string SIUniqueMasterCitizenNumberValue = "SIUniqueMasterCitizenNumber";
        private const string ZAIdentificationNumberValue = "ZAIdentificationNumber";
        private const string KRResidentRegistrationNumberValue = "KRResidentRegistrationNumber";
        private const string ESDNIValue = "ESDNI";
        private const string ESSocialSecurityNumberValue = "ESSocialSecurityNumber";
        private const string ESTaxIdentificationNumberValue = "ESTaxIdentificationNumber";
        private const string SQLServerConnectionStringValue = "SQLServerConnectionString";
        private const string SENationalIDValue = "SENationalID";
        private const string SENationalIDV2Value = "SENationalIDV2";
        private const string SEPassportNumberValue = "SEPassportNumber";
        private const string SETaxIdentificationNumberValue = "SETaxIdentificationNumber";
        private const string SWIFTCodeValue = "SWIFTCode";
        private const string CHSocialSecurityNumberValue = "CHSocialSecurityNumber";
        private const string TWNationalIDValue = "TWNationalID";
        private const string TWPassportNumberValue = "TWPassportNumber";
        private const string TWResidentCertificateValue = "TWResidentCertificate";
        private const string THPopulationIdentificationCodeValue = "THPopulationIdentificationCode";
        private const string TRNationalIdentificationNumberValue = "TRNationalIdentificationNumber";
        private const string UKDriversLicenseNumberValue = "UKDriversLicenseNumber";
        private const string UKElectoralRollNumberValue = "UKElectoralRollNumber";
        private const string UKNationalHealthNumberValue = "UKNationalHealthNumber";
        private const string UKNationalInsuranceNumberValue = "UKNationalInsuranceNumber";
        private const string UKUniqueTaxpayerNumberValue = "UKUniqueTaxpayerNumber";
        private const string USUKPassportNumberValue = "USUKPassportNumber";
        private const string USBankAccountNumberValue = "USBankAccountNumber";
        private const string USDriversLicenseNumberValue = "USDriversLicenseNumber";
        private const string USIndividualTaxpayerIdentificationValue = "USIndividualTaxpayerIdentification";
        private const string USSocialSecurityNumberValue = "USSocialSecurityNumber";
        private const string UAPassportNumberDomesticValue = "UAPassportNumberDomestic";
        private const string UAPassportNumberInternationalValue = "UAPassportNumberInternational";
        private const string OrganizationValue = "Organization";
        private const string EmailValue = "Email";
        private const string URLValue = "URL";
        private const string AgeValue = "Age";
        private const string PhoneNumberValue = "PhoneNumber";
        private const string IPAddressValue = "IPAddress";
        private const string DateValue = "Date";
        private const string PersonValue = "Person";
        private const string AddressValue = "Address";

        /// <summary> ABA Routing number. </summary>
        public static PiiCategoriesExclude ABARoutingNumber { get; } = new PiiCategoriesExclude(ABARoutingNumberValue);
        /// <summary> AR National Identity Number. </summary>
        public static PiiCategoriesExclude ARNationalIdentityNumber { get; } = new PiiCategoriesExclude(ARNationalIdentityNumberValue);
        /// <summary> AT Identity Card. </summary>
        public static PiiCategoriesExclude AUBankAccountNumber { get; } = new PiiCategoriesExclude(AUBankAccountNumberValue);
        /// <summary> AU Driver's License Number. </summary>
        public static PiiCategoriesExclude AUDriversLicenseNumber { get; } = new PiiCategoriesExclude(AUDriversLicenseNumberValue);
        /// <summary> AU Medical Account Number. </summary>
        public static PiiCategoriesExclude AUMedicalAccountNumber { get; } = new PiiCategoriesExclude(AUMedicalAccountNumberValue);
        /// <summary> AU Passport Number. </summary>
        public static PiiCategoriesExclude AUPassportNumber { get; } = new PiiCategoriesExclude(AUPassportNumberValue);
        /// <summary> AU Tax File Number. </summary>
        public static PiiCategoriesExclude AUTaxFileNumber { get; } = new PiiCategoriesExclude(AUTaxFileNumberValue);
        /// <summary> AU Business Number. </summary>
        public static PiiCategoriesExclude AUBusinessNumber { get; } = new PiiCategoriesExclude(AUBusinessNumberValue);
        /// <summary> AU Company Number. </summary>
        public static PiiCategoriesExclude AUCompanyNumber { get; } = new PiiCategoriesExclude(AUCompanyNumberValue);
        /// <summary> AT Identity Card. </summary>
        public static PiiCategoriesExclude ATIdentityCard { get; } = new PiiCategoriesExclude(ATIdentityCardValue);
        /// <summary> AT Tax Identification Number. </summary>
        public static PiiCategoriesExclude ATTaxIdentificationNumber { get; } = new PiiCategoriesExclude(ATTaxIdentificationNumberValue);
        /// <summary> AT Value Added Tax Number. </summary>
        public static PiiCategoriesExclude ATValueAddedTaxNumber { get; } = new PiiCategoriesExclude(ATValueAddedTaxNumberValue);
        /// <summary> Azure Document DB Auth Key. </summary>
        public static PiiCategoriesExclude AzureDocumentDBAuthKey { get; } = new PiiCategoriesExclude(AzureDocumentDBAuthKeyValue);
        /// <summary> Azure IAAS Database Connection And SQL String. </summary>
        public static PiiCategoriesExclude AzureIAASDatabaseConnectionAndSQLString { get; } = new PiiCategoriesExclude(AzureIAASDatabaseConnectionAndSQLStringValue);
        /// <summary> Azure IoT Connection String. </summary>
        public static PiiCategoriesExclude AzureIoTConnectionString { get; } = new PiiCategoriesExclude(AzureIoTConnectionStringValue);
        /// <summary> Azure Publish Setting Password. </summary>
        public static PiiCategoriesExclude AzurePublishSettingPassword { get; } = new PiiCategoriesExclude(AzurePublishSettingPasswordValue);
        /// <summary> Azure Redis Cache String. </summary>
        public static PiiCategoriesExclude AzureRedisCacheString { get; } = new PiiCategoriesExclude(AzureRedisCacheStringValue);
        /// <summary> Azure SAS. </summary>
        public static PiiCategoriesExclude AzureSAS { get; } = new PiiCategoriesExclude(AzureSASValue);
        /// <summary> Azure Service Bus String. </summary>
        public static PiiCategoriesExclude AzureServiceBusString { get; } = new PiiCategoriesExclude(AzureServiceBusStringValue);
        /// <summary> Azure Storage Account Key. </summary>
        public static PiiCategoriesExclude AzureStorageAccountKey { get; } = new PiiCategoriesExclude(AzureStorageAccountKeyValue);
        /// <summary> Azure Storage Account Generic. </summary>
        public static PiiCategoriesExclude AzureStorageAccountGeneric { get; } = new PiiCategoriesExclude(AzureStorageAccountGenericValue);
        /// <summary> BE National Number. </summary>
        public static PiiCategoriesExclude BENationalNumber { get; } = new PiiCategoriesExclude(BENationalNumberValue);
        /// <summary> BE National Number V2. </summary>
        public static PiiCategoriesExclude BENationalNumberV2 { get; } = new PiiCategoriesExclude(BENationalNumberV2Value);
        /// <summary> BE Value Added Tax Number. </summary>
        public static PiiCategoriesExclude BEValueAddedTaxNumber { get; } = new PiiCategoriesExclude(BEValueAddedTaxNumberValue);
        /// <summary> BR CPF Number. </summary>
        public static PiiCategoriesExclude BRCPFNumber { get; } = new PiiCategoriesExclude(BRCPFNumberValue);
        /// <summary> BR Legal Entity Number. </summary>
        public static PiiCategoriesExclude BRLegalEntityNumber { get; } = new PiiCategoriesExclude(BRLegalEntityNumberValue);
        /// <summary> BR National ID RG. </summary>
        public static PiiCategoriesExclude BRNationalIDRG { get; } = new PiiCategoriesExclude(BRNationalIDRGValue);
        /// <summary> BG Uniform Civil Number. </summary>
        public static PiiCategoriesExclude BGUniformCivilNumber { get; } = new PiiCategoriesExclude(BGUniformCivilNumberValue);
        /// <summary> CA Bank Account Number. </summary>
        public static PiiCategoriesExclude CABankAccountNumber { get; } = new PiiCategoriesExclude(CABankAccountNumberValue);
        /// <summary> CA Driver's License Number. </summary>
        public static PiiCategoriesExclude CADriversLicenseNumber { get; } = new PiiCategoriesExclude(CADriversLicenseNumberValue);
        /// <summary> CA Health Service Number. </summary>
        public static PiiCategoriesExclude CAHealthServiceNumber { get; } = new PiiCategoriesExclude(CAHealthServiceNumberValue);
        /// <summary> CA Passport Number. </summary>
        public static PiiCategoriesExclude CAPassportNumber { get; } = new PiiCategoriesExclude(CAPassportNumberValue);
        /// <summary> CA Personal Health Identification. </summary>
        public static PiiCategoriesExclude CAPersonalHealthIdentification { get; } = new PiiCategoriesExclude(CAPersonalHealthIdentificationValue);
        /// <summary> CA Social Insurance Number. </summary>
        public static PiiCategoriesExclude CASocialInsuranceNumber { get; } = new PiiCategoriesExclude(CASocialInsuranceNumberValue);
        /// <summary> CL Identity Card Number. </summary>
        public static PiiCategoriesExclude CLIdentityCardNumber { get; } = new PiiCategoriesExclude(CLIdentityCardNumberValue);
        /// <summary> CN Resident Identity Card Number. </summary>
        public static PiiCategoriesExclude CNResidentIdentityCardNumber { get; } = new PiiCategoriesExclude(CNResidentIdentityCardNumberValue);
        /// <summary> Credit Card Number. </summary>
        public static PiiCategoriesExclude CreditCardNumber { get; } = new PiiCategoriesExclude(CreditCardNumberValue);
        /// <summary> HR Identity Card Number. </summary>
        public static PiiCategoriesExclude HRIdentityCardNumber { get; } = new PiiCategoriesExclude(HRIdentityCardNumberValue);
        /// <summary> HR National ID Number. </summary>
        public static PiiCategoriesExclude HRNationalIDNumber { get; } = new PiiCategoriesExclude(HRNationalIDNumberValue);
        /// <summary> HR Personal Identification Number. </summary>
        public static PiiCategoriesExclude HRPersonalIdentificationNumber { get; } = new PiiCategoriesExclude(HRPersonalIdentificationNumberValue);
        /// <summary> HR Personal Identification OIB Number V2. </summary>
        public static PiiCategoriesExclude HRPersonalIdentificationOIBNumberV2 { get; } = new PiiCategoriesExclude(HRPersonalIdentificationOIBNumberV2Value);
        /// <summary> CY Identity Card. </summary>
        public static PiiCategoriesExclude CYIdentityCard { get; } = new PiiCategoriesExclude(CYIdentityCardValue);
        /// <summary> CY Tax Identification Number. </summary>
        public static PiiCategoriesExclude CYTaxIdentificationNumber { get; } = new PiiCategoriesExclude(CYTaxIdentificationNumberValue);
        /// <summary> CZ Personal Identity Number. </summary>
        public static PiiCategoriesExclude CZPersonalIdentityNumber { get; } = new PiiCategoriesExclude(CZPersonalIdentityNumberValue);
        /// <summary> CZ Personal Identity V2. </summary>
        public static PiiCategoriesExclude CZPersonalIdentityV2 { get; } = new PiiCategoriesExclude(CZPersonalIdentityV2Value);
        /// <summary> DK Personal Identification Number. </summary>
        public static PiiCategoriesExclude DKPersonalIdentificationNumber { get; } = new PiiCategoriesExclude(DKPersonalIdentificationNumberValue);
        /// <summary> DK Personal Identification V2. </summary>
        public static PiiCategoriesExclude DKPersonalIdentificationV2 { get; } = new PiiCategoriesExclude(DKPersonalIdentificationV2Value);
        /// <summary> Drug Enforcement Agency Number. </summary>
        public static PiiCategoriesExclude DrugEnforcementAgencyNumber { get; } = new PiiCategoriesExclude(DrugEnforcementAgencyNumberValue);
        /// <summary> EE Personal Identification Code. </summary>
        public static PiiCategoriesExclude EEPersonalIdentificationCode { get; } = new PiiCategoriesExclude(EEPersonalIdentificationCodeValue);
        /// <summary> EU Debit Card Number. </summary>
        public static PiiCategoriesExclude EUDebitCardNumber { get; } = new PiiCategoriesExclude(EUDebitCardNumberValue);
        /// <summary> EU Driver's License Number. </summary>
        public static PiiCategoriesExclude EUDriversLicenseNumber { get; } = new PiiCategoriesExclude(EUDriversLicenseNumberValue);
        /// <summary> EU GPS Coordinates. </summary>
        public static PiiCategoriesExclude EUGPSCoordinates { get; } = new PiiCategoriesExclude(EUGPSCoordinatesValue);
        /// <summary> EU National Identification Number. </summary>
        public static PiiCategoriesExclude EUNationalIdentificationNumber { get; } = new PiiCategoriesExclude(EUNationalIdentificationNumberValue);
        /// <summary> EU Passport Number. </summary>
        public static PiiCategoriesExclude EUPassportNumber { get; } = new PiiCategoriesExclude(EUPassportNumberValue);
        /// <summary> EU Social Security Number. </summary>
        public static PiiCategoriesExclude EUSocialSecurityNumber { get; } = new PiiCategoriesExclude(EUSocialSecurityNumberValue);
        /// <summary> EU Tax Identification Number. </summary>
        public static PiiCategoriesExclude EUTaxIdentificationNumber { get; } = new PiiCategoriesExclude(EUTaxIdentificationNumberValue);
        /// <summary> FI European Health Number. </summary>
        public static PiiCategoriesExclude FIEuropeanHealthNumber { get; } = new PiiCategoriesExclude(FIEuropeanHealthNumberValue);
        /// <summary> FI National ID. </summary>
        public static PiiCategoriesExclude FINationalID { get; } = new PiiCategoriesExclude(FINationalIDValue);
        /// <summary> FI National ID V2. </summary>
        public static PiiCategoriesExclude FINationalIDV2 { get; } = new PiiCategoriesExclude(FINationalIDV2Value);
        /// <summary> FI Passport Number. </summary>
        public static PiiCategoriesExclude FIPassportNumber { get; } = new PiiCategoriesExclude(FIPassportNumberValue);
        /// <summary> FR Driver's License Number. </summary>
        public static PiiCategoriesExclude FRDriversLicenseNumber { get; } = new PiiCategoriesExclude(FRDriversLicenseNumberValue);
        /// <summary> FR Health Insurance Number. </summary>
        public static PiiCategoriesExclude FRHealthInsuranceNumber { get; } = new PiiCategoriesExclude(FRHealthInsuranceNumberValue);
        /// <summary> FR National ID. </summary>
        public static PiiCategoriesExclude FRNationalID { get; } = new PiiCategoriesExclude(FRNationalIDValue);
        /// <summary> FR Passport Number. </summary>
        public static PiiCategoriesExclude FRPassportNumber { get; } = new PiiCategoriesExclude(FRPassportNumberValue);
        /// <summary> FR Social Security Number. </summary>
        public static PiiCategoriesExclude FRSocialSecurityNumber { get; } = new PiiCategoriesExclude(FRSocialSecurityNumberValue);
        /// <summary> FR Tax Identification Number. </summary>
        public static PiiCategoriesExclude FRTaxIdentificationNumber { get; } = new PiiCategoriesExclude(FRTaxIdentificationNumberValue);
        /// <summary> FR Value Added Tax Number. </summary>
        public static PiiCategoriesExclude FRValueAddedTaxNumber { get; } = new PiiCategoriesExclude(FRValueAddedTaxNumberValue);
        /// <summary> DE Driver's License Number. </summary>
        public static PiiCategoriesExclude DEDriversLicenseNumber { get; } = new PiiCategoriesExclude(DEDriversLicenseNumberValue);
        /// <summary> DE Passport Number. </summary>
        public static PiiCategoriesExclude DEPassportNumber { get; } = new PiiCategoriesExclude(DEPassportNumberValue);
        /// <summary> DE Identity Card Number. </summary>
        public static PiiCategoriesExclude DEIdentityCardNumber { get; } = new PiiCategoriesExclude(DEIdentityCardNumberValue);
        /// <summary> DE Tax Identification Number. </summary>
        public static PiiCategoriesExclude DETaxIdentificationNumber { get; } = new PiiCategoriesExclude(DETaxIdentificationNumberValue);
        /// <summary> DE Value Added Number. </summary>
        public static PiiCategoriesExclude DEValueAddedNumber { get; } = new PiiCategoriesExclude(DEValueAddedNumberValue);
        /// <summary> GR National ID Card. </summary>
        public static PiiCategoriesExclude GRNationalIDCard { get; } = new PiiCategoriesExclude(GRNationalIDCardValue);
        /// <summary> GR National ID V2. </summary>
        public static PiiCategoriesExclude GRNationalIDV2 { get; } = new PiiCategoriesExclude(GRNationalIDV2Value);
        /// <summary> GR Tax Identification Number. </summary>
        public static PiiCategoriesExclude GRTaxIdentificationNumber { get; } = new PiiCategoriesExclude(GRTaxIdentificationNumberValue);
        /// <summary> HK Identity Card Number. </summary>
        public static PiiCategoriesExclude HKIdentityCardNumber { get; } = new PiiCategoriesExclude(HKIdentityCardNumberValue);
        /// <summary> HU Value Added Number. </summary>
        public static PiiCategoriesExclude HUValueAddedNumber { get; } = new PiiCategoriesExclude(HUValueAddedNumberValue);
        /// <summary> HU Personal Identification Number. </summary>
        public static PiiCategoriesExclude HUPersonalIdentificationNumber { get; } = new PiiCategoriesExclude(HUPersonalIdentificationNumberValue);
        /// <summary> HU Tax Identification Number. </summary>
        public static PiiCategoriesExclude HUTaxIdentificationNumber { get; } = new PiiCategoriesExclude(HUTaxIdentificationNumberValue);
        /// <summary> IN Permanent Account. </summary>
        public static PiiCategoriesExclude INPermanentAccount { get; } = new PiiCategoriesExclude(INPermanentAccountValue);
        /// <summary> IN Unique Identification Number. </summary>
        public static PiiCategoriesExclude INUniqueIdentificationNumber { get; } = new PiiCategoriesExclude(INUniqueIdentificationNumberValue);
        /// <summary> ID Identity Card Number. </summary>
        public static PiiCategoriesExclude IDIdentityCardNumber { get; } = new PiiCategoriesExclude(IDIdentityCardNumberValue);
        /// <summary> International Banking Account Number. </summary>
        public static PiiCategoriesExclude InternationalBankingAccountNumber { get; } = new PiiCategoriesExclude(InternationalBankingAccountNumberValue);
        /// <summary> IE Personal Public Service Number. </summary>
        public static PiiCategoriesExclude IEPersonalPublicServiceNumber { get; } = new PiiCategoriesExclude(IEPersonalPublicServiceNumberValue);
        /// <summary> IE Personal Public Service Number V2. </summary>
        public static PiiCategoriesExclude IEPersonalPublicServiceNumberV2 { get; } = new PiiCategoriesExclude(IEPersonalPublicServiceNumberV2Value);
        /// <summary> IL Bank Account Number. </summary>
        public static PiiCategoriesExclude ILBankAccountNumber { get; } = new PiiCategoriesExclude(ILBankAccountNumberValue);
        /// <summary> IL National ID. </summary>
        public static PiiCategoriesExclude ILNationalID { get; } = new PiiCategoriesExclude(ILNationalIDValue);
        /// <summary> IT Driver's License Number. </summary>
        public static PiiCategoriesExclude ITDriversLicenseNumber { get; } = new PiiCategoriesExclude(ITDriversLicenseNumberValue);
        /// <summary> IT Fiscal Code. </summary>
        public static PiiCategoriesExclude ITFiscalCode { get; } = new PiiCategoriesExclude(ITFiscalCodeValue);
        /// <summary> IT Value Added Tax Number. </summary>
        public static PiiCategoriesExclude ITValueAddedTaxNumber { get; } = new PiiCategoriesExclude(ITValueAddedTaxNumberValue);
        /// <summary> JP Bank Account Number. </summary>
        public static PiiCategoriesExclude JPBankAccountNumber { get; } = new PiiCategoriesExclude(JPBankAccountNumberValue);
        /// <summary> JP Driver's License Number. </summary>
        public static PiiCategoriesExclude JPDriversLicenseNumber { get; } = new PiiCategoriesExclude(JPDriversLicenseNumberValue);
        /// <summary> JP Passport Number. </summary>
        public static PiiCategoriesExclude JPPassportNumber { get; } = new PiiCategoriesExclude(JPPassportNumberValue);
        /// <summary> JP Resident Registration Number. </summary>
        public static PiiCategoriesExclude JPResidentRegistrationNumber { get; } = new PiiCategoriesExclude(JPResidentRegistrationNumberValue);
        /// <summary> JP Social Insurance Number. </summary>
        public static PiiCategoriesExclude JPSocialInsuranceNumber { get; } = new PiiCategoriesExclude(JPSocialInsuranceNumberValue);
        /// <summary> JP My Number Corporate. </summary>
        public static PiiCategoriesExclude JPMyNumberCorporate { get; } = new PiiCategoriesExclude(JPMyNumberCorporateValue);
        /// <summary> JP My Number Personal. </summary>
        public static PiiCategoriesExclude JPMyNumberPersonal { get; } = new PiiCategoriesExclude(JPMyNumberPersonalValue);
        /// <summary> JP Residence Card Number. </summary>
        public static PiiCategoriesExclude JPResidenceCardNumber { get; } = new PiiCategoriesExclude(JPResidenceCardNumberValue);
        /// <summary> LV Personal Code. </summary>
        public static PiiCategoriesExclude LVPersonalCode { get; } = new PiiCategoriesExclude(LVPersonalCodeValue);
        /// <summary> LT Personal Code. </summary>
        public static PiiCategoriesExclude LTPersonalCode { get; } = new PiiCategoriesExclude(LTPersonalCodeValue);
        /// <summary> LU National Identification Number Natural. </summary>
        public static PiiCategoriesExclude LUNationalIdentificationNumberNatural { get; } = new PiiCategoriesExclude(LUNationalIdentificationNumberNaturalValue);
        /// <summary> LU National Identification Number Non Natural. </summary>
        public static PiiCategoriesExclude LUNationalIdentificationNumberNonNatural { get; } = new PiiCategoriesExclude(LUNationalIdentificationNumberNonNaturalValue);
        /// <summary> MY Identity Card Number. </summary>
        public static PiiCategoriesExclude MYIdentityCardNumber { get; } = new PiiCategoriesExclude(MYIdentityCardNumberValue);
        /// <summary> MT Identity Card Number. </summary>
        public static PiiCategoriesExclude MTIdentityCardNumber { get; } = new PiiCategoriesExclude(MTIdentityCardNumberValue);
        /// <summary> MT Tax ID Number. </summary>
        public static PiiCategoriesExclude MTTaxIDNumber { get; } = new PiiCategoriesExclude(MTTaxIDNumberValue);
        /// <summary> NL Citizens Service Number. </summary>
        public static PiiCategoriesExclude NLCitizensServiceNumber { get; } = new PiiCategoriesExclude(NLCitizensServiceNumberValue);
        /// <summary> NL Citizens Service Number V2. </summary>
        public static PiiCategoriesExclude NLCitizensServiceNumberV2 { get; } = new PiiCategoriesExclude(NLCitizensServiceNumberV2Value);
        /// <summary> NL Tax Identification Number. </summary>
        public static PiiCategoriesExclude NLTaxIdentificationNumber { get; } = new PiiCategoriesExclude(NLTaxIdentificationNumberValue);
        /// <summary> NL Value Added Tax Number. </summary>
        public static PiiCategoriesExclude NLValueAddedTaxNumber { get; } = new PiiCategoriesExclude(NLValueAddedTaxNumberValue);
        /// <summary> NZ Bank Account Number. </summary>
        public static PiiCategoriesExclude NZBankAccountNumber { get; } = new PiiCategoriesExclude(NZBankAccountNumberValue);
        /// <summary> NZ Driver's License Number. </summary>
        public static PiiCategoriesExclude NZDriversLicenseNumber { get; } = new PiiCategoriesExclude(NZDriversLicenseNumberValue);
        /// <summary> NZ Inland Revenue Number. </summary>
        public static PiiCategoriesExclude NZInlandRevenueNumber { get; } = new PiiCategoriesExclude(NZInlandRevenueNumberValue);
        /// <summary> NZ Ministry Of Health Number. </summary>
        public static PiiCategoriesExclude NZMinistryOfHealthNumber { get; } = new PiiCategoriesExclude(NZMinistryOfHealthNumberValue);
        /// <summary> NZ Social Welfare Number. </summary>
        public static PiiCategoriesExclude NZSocialWelfareNumber { get; } = new PiiCategoriesExclude(NZSocialWelfareNumberValue);
        /// <summary> NO Identity Number. </summary>
        public static PiiCategoriesExclude NOIdentityNumber { get; } = new PiiCategoriesExclude(NOIdentityNumberValue);
        /// <summary> PH Unified Multi Purpose ID Number. </summary>
        public static PiiCategoriesExclude PHUnifiedMultiPurposeIDNumber { get; } = new PiiCategoriesExclude(PHUnifiedMultiPurposeIDNumberValue);
        /// <summary> PL Identity Card. </summary>
        public static PiiCategoriesExclude PLIdentityCard { get; } = new PiiCategoriesExclude(PLIdentityCardValue);
        /// <summary> PL National ID. </summary>
        public static PiiCategoriesExclude PLNationalID { get; } = new PiiCategoriesExclude(PLNationalIDValue);
        /// <summary> PL National ID V2. </summary>
        public static PiiCategoriesExclude PLNationalIDV2 { get; } = new PiiCategoriesExclude(PLNationalIDV2Value);
        /// <summary> PL Passport Number. </summary>
        public static PiiCategoriesExclude PLPassportNumber { get; } = new PiiCategoriesExclude(PLPassportNumberValue);
        /// <summary> PL Tax Identification Number. </summary>
        public static PiiCategoriesExclude PLTaxIdentificationNumber { get; } = new PiiCategoriesExclude(PLTaxIdentificationNumberValue);
        /// <summary> PL REGON Number. </summary>
        public static PiiCategoriesExclude PLREGONNumber { get; } = new PiiCategoriesExclude(PLREGONNumberValue);
        /// <summary> PT Citizen Card Number. </summary>
        public static PiiCategoriesExclude PTCitizenCardNumber { get; } = new PiiCategoriesExclude(PTCitizenCardNumberValue);
        /// <summary> PT Citizen Card Number V2. </summary>
        public static PiiCategoriesExclude PTCitizenCardNumberV2 { get; } = new PiiCategoriesExclude(PTCitizenCardNumberV2Value);
        /// <summary> PT Tax Identification Number. </summary>
        public static PiiCategoriesExclude PTTaxIdentificationNumber { get; } = new PiiCategoriesExclude(PTTaxIdentificationNumberValue);
        /// <summary> RO Personal Numerical Code. </summary>
        public static PiiCategoriesExclude ROPersonalNumericalCode { get; } = new PiiCategoriesExclude(ROPersonalNumericalCodeValue);
        /// <summary> RU Passport Number Domestic. </summary>
        public static PiiCategoriesExclude RUPassportNumberDomestic { get; } = new PiiCategoriesExclude(RUPassportNumberDomesticValue);
        /// <summary> RU Passport Number International. </summary>
        public static PiiCategoriesExclude RUPassportNumberInternational { get; } = new PiiCategoriesExclude(RUPassportNumberInternationalValue);
        /// <summary> SA National ID. </summary>
        public static PiiCategoriesExclude SANationalID { get; } = new PiiCategoriesExclude(SANationalIDValue);
        /// <summary> SG National Registration Identity Card Number. </summary>
        public static PiiCategoriesExclude SGNationalRegistrationIdentityCardNumber { get; } = new PiiCategoriesExclude(SGNationalRegistrationIdentityCardNumberValue);
        /// <summary> SK Personal Number. </summary>
        public static PiiCategoriesExclude SKPersonalNumber { get; } = new PiiCategoriesExclude(SKPersonalNumberValue);
        /// <summary> SI Tax Identification Number. </summary>
        public static PiiCategoriesExclude SITaxIdentificationNumber { get; } = new PiiCategoriesExclude(SITaxIdentificationNumberValue);
        /// <summary> SI Unique Master Citizen Number. </summary>
        public static PiiCategoriesExclude SIUniqueMasterCitizenNumber { get; } = new PiiCategoriesExclude(SIUniqueMasterCitizenNumberValue);
        /// <summary> ZA Identification Number. </summary>
        public static PiiCategoriesExclude ZAIdentificationNumber { get; } = new PiiCategoriesExclude(ZAIdentificationNumberValue);
        /// <summary> KR Resident Registration Number. </summary>
        public static PiiCategoriesExclude KRResidentRegistrationNumber { get; } = new PiiCategoriesExclude(KRResidentRegistrationNumberValue);
        /// <summary> ES DNI. </summary>
        public static PiiCategoriesExclude ESDNI { get; } = new PiiCategoriesExclude(ESDNIValue);
        /// <summary> ES Social Security Number. </summary>
        public static PiiCategoriesExclude ESSocialSecurityNumber { get; } = new PiiCategoriesExclude(ESSocialSecurityNumberValue);
        /// <summary> ES Tax Identification Number. </summary>
        public static PiiCategoriesExclude ESTaxIdentificationNumber { get; } = new PiiCategoriesExclude(ESTaxIdentificationNumberValue);
        /// <summary> SQL Server Connection String. </summary>
        public static PiiCategoriesExclude SQLServerConnectionString { get; } = new PiiCategoriesExclude(SQLServerConnectionStringValue);
        /// <summary> SE National ID. </summary>
        public static PiiCategoriesExclude SENationalID { get; } = new PiiCategoriesExclude(SENationalIDValue);
        /// <summary> SE National ID V2. </summary>
        public static PiiCategoriesExclude SENationalIDV2 { get; } = new PiiCategoriesExclude(SENationalIDV2Value);
        /// <summary> SE Passport Number. </summary>
        public static PiiCategoriesExclude SEPassportNumber { get; } = new PiiCategoriesExclude(SEPassportNumberValue);
        /// <summary> SE Tax Identification Number. </summary>
        public static PiiCategoriesExclude SETaxIdentificationNumber { get; } = new PiiCategoriesExclude(SETaxIdentificationNumberValue);
        /// <summary> SWIFT Code. </summary>
        public static PiiCategoriesExclude SWIFTCode { get; } = new PiiCategoriesExclude(SWIFTCodeValue);
        /// <summary> CH Social Security Number. </summary>
        public static PiiCategoriesExclude CHSocialSecurityNumber { get; } = new PiiCategoriesExclude(CHSocialSecurityNumberValue);
        /// <summary> TW National ID. </summary>
        public static PiiCategoriesExclude TWNationalID { get; } = new PiiCategoriesExclude(TWNationalIDValue);
        /// <summary> TW Passport Number. </summary>
        public static PiiCategoriesExclude TWPassportNumber { get; } = new PiiCategoriesExclude(TWPassportNumberValue);
        /// <summary> TW Resident Certificate. </summary>
        public static PiiCategoriesExclude TWResidentCertificate { get; } = new PiiCategoriesExclude(TWResidentCertificateValue);
        /// <summary> TH Population Identification Code. </summary>
        public static PiiCategoriesExclude THPopulationIdentificationCode { get; } = new PiiCategoriesExclude(THPopulationIdentificationCodeValue);
        /// <summary> TR National Identification Number. </summary>
        public static PiiCategoriesExclude TRNationalIdentificationNumber { get; } = new PiiCategoriesExclude(TRNationalIdentificationNumberValue);
        /// <summary> UK Driver's License Number. </summary>
        public static PiiCategoriesExclude UKDriversLicenseNumber { get; } = new PiiCategoriesExclude(UKDriversLicenseNumberValue);
        /// <summary> UK Electoral Roll Number. </summary>
        public static PiiCategoriesExclude UKElectoralRollNumber { get; } = new PiiCategoriesExclude(UKElectoralRollNumberValue);
        /// <summary> UK National Health Number. </summary>
        public static PiiCategoriesExclude UKNationalHealthNumber { get; } = new PiiCategoriesExclude(UKNationalHealthNumberValue);
        /// <summary> UK National Insurance Number. </summary>
        public static PiiCategoriesExclude UKNationalInsuranceNumber { get; } = new PiiCategoriesExclude(UKNationalInsuranceNumberValue);
        /// <summary> UK Unique Taxpayer Number. </summary>
        public static PiiCategoriesExclude UKUniqueTaxpayerNumber { get; } = new PiiCategoriesExclude(UKUniqueTaxpayerNumberValue);
        /// <summary> US UK Passport Number. </summary>
        public static PiiCategoriesExclude USUKPassportNumber { get; } = new PiiCategoriesExclude(USUKPassportNumberValue);
        /// <summary> US Bank Account Number. </summary>
        public static PiiCategoriesExclude USBankAccountNumber { get; } = new PiiCategoriesExclude(USBankAccountNumberValue);
        /// <summary> US Driver's License Number. </summary>
        public static PiiCategoriesExclude USDriversLicenseNumber { get; } = new PiiCategoriesExclude(USDriversLicenseNumberValue);
        /// <summary> US Individual Taxpayer Identification. </summary>
        public static PiiCategoriesExclude USIndividualTaxpayerIdentification { get; } = new PiiCategoriesExclude(USIndividualTaxpayerIdentificationValue);
        /// <summary> US Social Security Number. </summary>
        public static PiiCategoriesExclude USSocialSecurityNumber { get; } = new PiiCategoriesExclude(USSocialSecurityNumberValue);
        /// <summary> UA Passport Number Domestic. </summary>
        public static PiiCategoriesExclude UAPassportNumberDomestic { get; } = new PiiCategoriesExclude(UAPassportNumberDomesticValue);
        /// <summary> UA Passport Number International. </summary>
        public static PiiCategoriesExclude UAPassportNumberInternational { get; } = new PiiCategoriesExclude(UAPassportNumberInternationalValue);
        /// <summary> Organization. </summary>
        public static PiiCategoriesExclude Organization { get; } = new PiiCategoriesExclude(OrganizationValue);
        /// <summary> Email. </summary>
        public static PiiCategoriesExclude Email { get; } = new PiiCategoriesExclude(EmailValue);
        /// <summary> URL. </summary>
        public static PiiCategoriesExclude URL { get; } = new PiiCategoriesExclude(URLValue);
        /// <summary> Age. </summary>
        public static PiiCategoriesExclude Age { get; } = new PiiCategoriesExclude(AgeValue);
        /// <summary> Phone Number. </summary>
        public static PiiCategoriesExclude PhoneNumber { get; } = new PiiCategoriesExclude(PhoneNumberValue);
        /// <summary> IP Address. </summary>
        public static PiiCategoriesExclude IPAddress { get; } = new PiiCategoriesExclude(IPAddressValue);
        /// <summary> Date. </summary>
        public static PiiCategoriesExclude Date { get; } = new PiiCategoriesExclude(DateValue);
        /// <summary> Person. </summary>
        public static PiiCategoriesExclude Person { get; } = new PiiCategoriesExclude(PersonValue);
        /// <summary> Address. </summary>
        public static PiiCategoriesExclude Address { get; } = new PiiCategoriesExclude(AddressValue);
        /// <summary> Determines if two <see cref="PiiCategoriesExclude"/> values are the same. </summary>
        public static bool operator ==(PiiCategoriesExclude left, PiiCategoriesExclude right) => left.Equals(right);
        /// <summary> Determines if two <see cref="PiiCategoriesExclude"/> values are not the same. </summary>
        public static bool operator !=(PiiCategoriesExclude left, PiiCategoriesExclude right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="PiiCategoriesExclude"/>. </summary>
        public static implicit operator PiiCategoriesExclude(string value) => new PiiCategoriesExclude(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is PiiCategoriesExclude other && Equals(other);
        /// <inheritdoc />
        public bool Equals(PiiCategoriesExclude other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
